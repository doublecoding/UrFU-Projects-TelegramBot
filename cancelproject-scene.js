const { Telegraf } = require("telegraf");
const { Markup } = Telegraf;
const Composer = require("telegraf/composer");
const Stage = require("telegraf/stage");
const WizardScene = require("telegraf/scenes/wizard");
const mysql = require("mysql");
const { leave } = Stage;

const connection = mysql.createConnection({
    host: "localhost",
    user: "root",
    password: "root",
    database: "practice",
});

connection.query("SELECT * FROM `schedule`", (err, res) => console.log(err));
connection.query("SET SESSION wait_timeout = 604800");

function cancelprojectSceneGenerate() {
    const stepHandler = new Composer();

    const cancelproject = new WizardScene(
        "cancelproject",
        (ctx) => {
            ctx.reply("1. –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: ");
            ctx.wizard.next();
        },
        (ctx) => {
            ctx.wizard.state.team = ctx.message.text;
            connection.query(`SELECT * FROM schedule WHERE team = '${ctx.wizard.state.team.toLowerCase()}'`, (err, res) => {
                if (res[0] == undefined) {
                    ctx.replyWithHTML("‚ùóÔ∏è –í–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ\n\nüîπ<b>–í—ã–±–µ—Ä–∏, —á—Ç–æ –Ω—É–∂–Ω–æ:</b>");
                    ctx.scene.leave();
                }
                else {
                    ctx.reply("–í—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å ? (–î–∞/–ù–µ—Ç)");
                    ctx.wizard.next();
                }
            });
        },
        (ctx) => {
            if (ctx.message.text.toLowerCase() == "–¥–∞") {
                connection.query(`DELETE FROM schedule WHERE team = '${ctx.wizard.state.team}'`, (err, res) => {
                    ctx.replyWithHTML("–í–∞—à–∞ –∑–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞...\n\nüîπ<b>–í—ã–±–µ—Ä–∏, —á—Ç–æ –Ω—É–∂–Ω–æ:</b>");
                });
            }
            else if (ctx.message.text.toLowerCase() == "–Ω–µ—Ç") {
                ctx.replyWithHTML("–¢–∞–∫ –∑–∞—á–µ–º –Ω–∞–∂–∞–ª —Ç–æ–≥–¥–∞?...\n–Ø —É—Ö–æ–∂—É...\n\nüîπ<b>–í—ã–±–µ—Ä–∏, —á—Ç–æ –Ω—É–∂–Ω–æ:</b>");
            }
            else {
                ctx.replyWithPhoto({ source: '–∫–æ—Ç.jpg' });
                // ctx.replyWithHTML("–ó–∞–ø–∏—Å—å –Ω–µ —É–¥–∞–ª–µ–Ω–∞...\n\nüîπ<b>–í—ã–±–µ—Ä–∏, —á—Ç–æ –Ω—É–∂–Ω–æ:</b>")
            }
            ctx.scene.leave();
        }
    );

    return cancelproject;
}



module.exports = cancelprojectSceneGenerate;
