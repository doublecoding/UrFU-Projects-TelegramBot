const { Telegraf } = require("telegraf");
const { Markup } = Telegraf;
const Composer = require("telegraf/composer");
const Stage = require("telegraf/stage");
const WizardScene = require("telegraf/scenes/wizard");
const mysql = require("mysql");
const { leave } = Stage;

const connection = mysql.createConnection({
  socketPath: "/var/run/mysqld/mysqld.sock",
  user: "c27887_urfu_bot_ru",
  password: "QuJnuYirwawub45",
  database: "c27887_urfu_bot_ru",
});

connection.query("SELECT * FROM `schedule`", (err, res) => console.log(err));
connection.query("SET SESSION wait_timeout = 604800");

function checkprojectSceneGenerate() {
    const stepHandler = new Composer();

    const checkproject = new WizardScene(
        "checkproject",
        (ctx) => {
            ctx.reply("1. –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: ");
            ctx.wizard.next();
        },
        (ctx) => {
            ctx.wizard.state.team = ctx.message.text;
            connection.query(`SELECT * FROM schedule WHERE team = '${ctx.wizard.state.team.toLowerCase()}'`, (err, res) => {
                if (res[0] == undefined) {
                    ctx.replyWithHTML("‚ùóÔ∏è –í–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ\n\nüîπ<b>–í—ã–±–µ—Ä–∏, —á—Ç–æ –Ω—É–∂–Ω–æ:</b>");
                    ctx.scene.leave();
                }
                else {
                    ctx.replyWithHTML(`–í–∞—à–µ –≤—Ä–µ–º—è: <b>${res[0].time}</b>\n–í–∞—à–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: <b>${res[0].data}</b>\n\nüîπ<b>–í—ã–±–µ—Ä–∏, —á—Ç–æ –Ω—É–∂–Ω–æ:</b>`);
                    ctx.scene.leave();
                }
            });
        }
    );

    return checkproject;
}



module.exports = checkprojectSceneGenerate;
